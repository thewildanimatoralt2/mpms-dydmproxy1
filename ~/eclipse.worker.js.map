{"version":3,"file":"eclipse.worker.js","sources":["webpack://eclipse/./node_modules/@mercuryworkshop/bare-mux/dist/index.mjs","webpack://eclipse/./src/worker/index.ts"],"sourcesContent":["const e=20,t=globalThis.fetch,r=globalThis.SharedWorker,a=globalThis.localStorage,s=globalThis.navigator.serviceWorker,o=MessagePort.prototype.postMessage,n={prototype:{send:WebSocket.prototype.send},CLOSED:WebSocket.CLOSED,CLOSING:WebSocket.CLOSING,CONNECTING:WebSocket.CONNECTING,OPEN:WebSocket.OPEN};async function c(){const e=(await self.clients.matchAll({type:\"window\",includeUncontrolled:!0})).map((async e=>{const t=await function(e){let t=new MessageChannel;return new Promise((r=>{e.postMessage({type:\"getPort\",port:t.port2},[t.port2]),t.port1.onmessage=e=>{r(e.data)}}))}(e);return await i(t),t})),t=Promise.race([Promise.any(e),new Promise(((e,t)=>setTimeout(t,1e3,new TypeError(\"timeout\"))))]);try{return await t}catch(e){if(e instanceof AggregateError)throw console.error(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort as all clients returned an invalid MessagePort.\"),new Error(\"All clients returned an invalid MessagePort.\");return console.warn(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort within 1s, retrying\"),await c()}}function i(e){const t=new MessageChannel,r=new Promise(((e,r)=>{t.port1.onmessage=t=>{\"pong\"===t.data.type&&e()},setTimeout(r,1500)}));return o.call(e,{message:{type:\"ping\"},port:t.port2},[t.port2]),r}function l(e,t){const a=new r(e,\"bare-mux-worker\");return t&&s.addEventListener(\"message\",(t=>{if(\"getPort\"===t.data.type&&t.data.port){console.debug(\"bare-mux: recieved request for port from sw\");const a=new r(e,\"bare-mux-worker\");o.call(t.data.port,a.port,[a.port])}})),a.port}let h=null;function d(){if(null===h){const e=new MessageChannel,t=new ReadableStream;let r;try{o.call(e.port1,t,[t]),r=!0}catch(e){r=!1}return h=r,r}return h}class p{constructor(e){this.channel=new BroadcastChannel(\"bare-mux\"),e instanceof MessagePort||e instanceof Promise?this.port=e:this.createChannel(e,!0)}createChannel(e,t){if(self.clients)this.port=c(),this.channel.onmessage=e=>{\"refreshPort\"===e.data.type&&(this.port=c())};else if(e&&SharedWorker){if(!e.startsWith(\"/\")&&!e.includes(\"://\"))throw new Error(\"Invalid URL. Must be absolute or start at the root.\");this.port=l(e,t),console.debug(\"bare-mux: setting localStorage bare-mux-path to\",e),a[\"bare-mux-path\"]=e}else{if(!SharedWorker)throw new Error(\"Unable to get a channel to the SharedWorker.\");{const e=a[\"bare-mux-path\"];if(console.debug(\"bare-mux: got localStorage bare-mux-path:\",e),!e)throw new Error(\"Unable to get bare-mux workerPath from localStorage.\");this.port=l(e,t)}}}async sendMessage(e,t){this.port instanceof Promise&&(this.port=await this.port);try{await i(this.port)}catch{return console.warn(\"bare-mux: Failed to get a ping response from the worker within 1.5s. Assuming port is dead.\"),this.createChannel(),await this.sendMessage(e,t)}const r=new MessageChannel,a=[r.port2,...t||[]],s=new Promise(((e,t)=>{r.port1.onmessage=r=>{const a=r.data;\"error\"===a.type?t(a.error):e(a)}}));return o.call(this.port,{message:e,port:r.port2},a),await s}}class w extends EventTarget{constructor(e,t=[],r,a){super(),this.protocols=t,this.readyState=n.CONNECTING,this.url=e.toString(),this.protocols=t;const s=e=>{this.protocols=e,this.readyState=n.OPEN;const t=new Event(\"open\");this.dispatchEvent(t)},o=async e=>{const t=new MessageEvent(\"message\",{data:e});this.dispatchEvent(t)},c=(e,t)=>{this.readyState=n.CLOSED;const r=new CloseEvent(\"close\",{code:e,reason:t});this.dispatchEvent(r)},i=()=>{this.readyState=n.CLOSED;const e=new Event(\"error\");this.dispatchEvent(e)};this.channel=new MessageChannel,this.channel.port1.onmessage=e=>{\"open\"===e.data.type?s(e.data.args[0]):\"message\"===e.data.type?o(e.data.args[0]):\"close\"===e.data.type?c(e.data.args[0],e.data.args[1]):\"error\"===e.data.type&&i()},r.sendMessage({type:\"websocket\",websocket:{url:e.toString(),protocols:t,requestHeaders:a,channel:this.channel.port2}},[this.channel.port2])}send(...e){if(this.readyState===n.CONNECTING)throw new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");let t=e[0];t.buffer&&(t=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)),o.call(this.channel.port1,{type:\"data\",data:t},t instanceof ArrayBuffer?[t]:[])}close(e,t){o.call(this.channel.port1,{type:\"close\",closeCode:e,closeReason:t})}}function u(e,t,r){console.error(`error while processing '${r}': `,t),e.postMessage({type:\"error\",error:t})}function g(e){for(let t=0;t<e.length;t++){const r=e[t];if(!\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\".includes(r))return!1}return!0}const f=[\"ws:\",\"wss:\"],y=[101,204,205,304],b=[301,302,303,307,308];class m{constructor(e){this.worker=new p(e)}async getTransport(){return(await this.worker.sendMessage({type:\"get\"})).name}async setTransport(e,t,r){await this.setManualTransport(`\\n\\t\\t\\tconst { default: BareTransport } = await import(\"${e}\");\\n\\t\\t\\treturn [BareTransport, \"${e}\"];\\n\\t\\t`,t,r)}async setManualTransport(e,t,r){if(\"bare-mux-remote\"===e)throw new Error(\"Use setRemoteTransport.\");await this.worker.sendMessage({type:\"set\",client:{function:e,args:t}},r)}async setRemoteTransport(e,t){const r=new MessageChannel;r.port1.onmessage=async t=>{const r=t.data.port,a=t.data.message;if(\"fetch\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const a=await r.request(new URL(e.fetch.remote),e.fetch.method,e.fetch.body,e.fetch.headers,null);if(!d()&&a.body instanceof ReadableStream){const e=new Response(a.body);a.body=await e.arrayBuffer()}a.body instanceof ReadableStream||a.body instanceof ArrayBuffer?o.call(t,{type:\"fetch\",fetch:a},[a.body]):o.call(t,{type:\"fetch\",fetch:a})}(a,r,e)}catch(e){u(r,e,\"fetch\")}else if(\"websocket\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const[a,s]=r.connect(new URL(e.websocket.url),e.websocket.protocols,e.websocket.requestHeaders,(t=>{o.call(e.websocket.channel,{type:\"open\",args:[t]})}),(t=>{t instanceof ArrayBuffer?o.call(e.websocket.channel,{type:\"message\",args:[t]},[t]):o.call(e.websocket.channel,{type:\"message\",args:[t]})}),((t,r)=>{o.call(e.websocket.channel,{type:\"close\",args:[t,r]})}),(t=>{o.call(e.websocket.channel,{type:\"error\",args:[t]})}));e.websocket.channel.onmessage=e=>{\"data\"===e.data.type?a(e.data.data):\"close\"===e.data.type&&s(e.data.closeCode,e.data.closeReason)},o.call(t,{type:\"websocket\"})}(a,r,e)}catch(e){u(r,e,\"websocket\")}},await this.worker.sendMessage({type:\"set\",client:{function:\"bare-mux-remote\",args:[r.port2,t]}},[r.port2])}getInnerPort(){return this.worker.port}}class k{constructor(e){this.worker=new p(e)}createWebSocket(e,t=[],r,a){try{e=new URL(e)}catch(t){throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${e}' is invalid.`)}if(!f.includes(e.protocol))throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${e.protocol}' is not allowed.`);Array.isArray(t)||(t=[t]),t=t.map(String);for(const e of t)if(!g(e))throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${e}' is invalid.`);a=a||{};return new w(e,t,this.worker,a)}async fetch(e,r){const a=new Request(e,r),s=r?.headers||a.headers,o=s instanceof Headers?Object.fromEntries(s):s,n=a.body;let c=new URL(a.url);if(c.protocol.startsWith(\"blob:\")){const e=await t(c),r=new Response(e.body,e);return r.rawHeaders=Object.fromEntries(e.headers),r.rawResponse=e,r}for(let e=0;;e++){let t=(await this.worker.sendMessage({type:\"fetch\",fetch:{remote:c.toString(),method:a.method,headers:o,body:n||void 0}},n?[n]:[])).fetch,s=new Response(y.includes(t.status)?void 0:t.body,{headers:new Headers(t.headers),status:t.status,statusText:t.statusText});s.rawHeaders=t.headers,s.finalURL=c.toString();const i=r?.redirect||a.redirect;if(!b.includes(s.status))return s;switch(i){case\"follow\":{const t=s.headers.get(\"location\");if(20>e&&null!==t){c=new URL(t,c);continue}throw new TypeError(\"Failed to fetch\")}case\"error\":throw new TypeError(\"Failed to fetch\");case\"manual\":return s}}}}console.debug(\"bare-mux: running v2.1.6 (build 4b7607b)\");export{k as BareClient,m as BareMuxConnection,w as BareWebSocket,n as WebSocketFields,p as WorkerConnection,d as browserSupportsTransferringStreams,k as default,e as maxRedirects,g as validProtocol};\n//# sourceMappingURL=index.mjs.map\n","import { BareClient, BareResponse } from \"@mercuryworkshop/bare-mux\";\n\nself.EclipseServiceWorker = class EclipseServiceWorker {\n\tclient: BareClient;\n\tconstructor() {\n\t\tthis.client = new BareClient();\n\t}\n\troute({ request }): boolean {\n\t\treturn request.url.startsWith(\n\t\t\tlocation.origin + self.__eclipse$config.prefix\n\t\t);\n\t}\n\tasync fetch({ request }): Promise<Response> {\n\t\tif (\n\t\t\t!request.url.startsWith(location.origin + self.__eclipse$config.prefix)\n\t\t) {\n\t\t\treturn await fetch(request);\n\t\t}\n\n\t\tconst files: Array<string> = [\n\t\t\t\"codecs\",\n\t\t\t\"config\",\n\t\t\t\"rewrite\",\n\t\t\t\"worker\",\n\t\t\t\"client\",\n\t\t];\n\n\t\tfor (const file of files) {\n\t\t\tif (request.url == location.origin + self.__eclipse$config[file]) {\n\t\t\t\treturn await fetch(request);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst url: string = self.__eclipse$rewrite.url.decode(request.url);\n\n\t\t\tconst requestHeaders: Headers =\n\t\t\t\tawait self.__eclipse$rewrite.headers.request(\n\t\t\t\t\tObject.assign({}, request.headers),\n\t\t\t\t\trequest.url\n\t\t\t\t);\n\n\t\t\tinterface ClientResponse extends BareResponse {\n\t\t\t\tfinalURL: string;\n\t\t\t}\n\n\t\t\tconst response: ClientResponse = await this.client.fetch(url, {\n\t\t\t\tmethod: request.method,\n\t\t\t\tbody: request.body,\n\t\t\t\theaders: requestHeaders,\n\t\t\t\tcredentials: \"omit\",\n\t\t\t\tmode: request.mode === \"cors\" ? request.mode : \"same-origin\",\n\t\t\t\tcache: request.cache,\n\t\t\t\tredirect: request.redirect,\n\t\t\t\t//@ts-ignore\n\t\t\t\tduplex: \"half\",\n\t\t\t});\n\n\t\t\tconst responseHeaders: Headers =\n\t\t\t\tawait self.__eclipse$rewrite.headers.response(\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tresponse.rawHeaders,\n\t\t\t\t\trequest.url\n\t\t\t\t);\n\n\t\t\tlet body: any;\n\n\t\t\tif (response.body) {\n\t\t\t\tconst contentType: string =\n\t\t\t\t\tresponseHeaders.has(\"content-type\") &&\n\t\t\t\t\tresponseHeaders.get(\"content-type\");\n\t\t\t\tswitch (request.destination) {\n\t\t\t\t\tcase \"iframe\":\n\t\t\t\t\tcase \"document\":\n\t\t\t\t\t\tif (contentType) {\n\t\t\t\t\t\t\tif (contentType.startsWith(\"text/html\")) {\n\t\t\t\t\t\t\t\tbody = self.__eclipse$rewrite.html(\n\t\t\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (contentType.startsWith(\"text/css\")) {\n\t\t\t\t\t\t\t\tbody = self.__eclipse$rewrite.css(\n\t\t\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\t\t\"stylesheet\",\n\t\t\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tcontentType.startsWith(\"text/javascript\") ||\n\t\t\t\t\t\t\t\tcontentType.startsWith(\"application/javascript\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbody = self.__eclipse$rewrite.javascript(\n\t\t\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody = response.body;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody = response.body;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"sharedworker\":\n\t\t\t\t\tcase \"worker\":\n\t\t\t\t\tcase \"serviceworker\":\n\t\t\t\t\tcase \"script\":\n\t\t\t\t\t\tbody = self.__eclipse$rewrite.javascript(\n\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"style\":\n\t\t\t\t\t\tbody = self.__eclipse$rewrite.css(\n\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\"stylesheet\",\n\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"manifest\":\n\t\t\t\t\t\tbody = self.__eclipse$rewrite.manifest(\n\t\t\t\t\t\t\tawait response.json(),\n\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (contentType) {\n\t\t\t\t\t\t\tif (contentType.startsWith(\"text/html\")) {\n\t\t\t\t\t\t\t\tbody = self.__eclipse$rewrite.html(\n\t\t\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (contentType.startsWith(\"text/css\")) {\n\t\t\t\t\t\t\t\tbody = self.__eclipse$rewrite.css(\n\t\t\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\t\t\"stylesheet\",\n\t\t\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tcontentType.startsWith(\"text/javascript\") ||\n\t\t\t\t\t\t\t\tcontentType.startsWith(\"application/javascript\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbody = self.__eclipse$rewrite.javascript(\n\t\t\t\t\t\t\t\t\tawait response.text(),\n\t\t\t\t\t\t\t\t\trequest.url\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody = response.body;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbody = response.body;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ([\"document\", \"iframe\"].includes(request.destination)) {\n\t\t\t\tconst contentDisposition: string = responseHeaders.get(\n\t\t\t\t\t\"content-disposition\"\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!/\\s*?((inline|attachment);\\s*?)filename=/i.test(contentDisposition)\n\t\t\t\t) {\n\t\t\t\t\tconst type = /^\\s*?attachment/i.test(contentDisposition)\n\t\t\t\t\t\t? \"attachment\"\n\t\t\t\t\t\t: \"inline\";\n\t\t\t\t\tconst [filename] = response.finalURL.split(\"/\").reverse();\n\t\t\t\t\tresponseHeaders.set(\n\t\t\t\t\t\t\"content-disposition\",\n\t\t\t\t\t\t`${type}; filename=${JSON.stringify(filename)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Response(body, {\n\t\t\t\theaders: responseHeaders,\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn new Response(error, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"content-type\": \"text/plain\",\n\t\t\t\t},\n\t\t\t\tstatus: 500,\n\t\t\t});\n\t\t}\n\t}\n};\n"],"names":["BareClient","self","EclipseServiceWorker","route","param","request","location","fetch1","files","_iteratorError","file","url","requestHeaders","response","responseHeaders","body","contentType","contentDisposition","type","_response_finalURL_split_reverse","filename","error","fetch","Object","JSON","Response"],"mappings":"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"}
